{"version":3,"sources":["views/Cast/Cast.jsx","views/Cast/Cast.module.css"],"names":["Status","Cast","movieId","useParams","useState","actors","setActors","error","setError","status","setStatus","useEffect","moviesApi","FetchCastInfo","then","cast","catch","console","log","className","s","map","actor","src","profile_path","baseImageURL","NoImgFound","alt","original_name","photo","name","character","id","module","exports"],"mappings":"gPASMA,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAEG,SAASC,IACtB,IAAQC,EAAYC,cAAZD,QACR,EAA8BE,mBAAS,MAAvC,mBAAQC,EAAR,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,MAArC,mBAAQG,EAAR,KAAeC,EAAf,KACA,EAA8BJ,mBAASJ,GAAvC,mBAAQS,EAAR,KAAgBC,EAAhB,KAgBF,OAbAC,qBAAU,WACRC,IAAUC,cAAcX,GACvBY,MAAK,SAAAC,GACHT,EAAUS,GACVL,EAAUV,MAEZgB,OAAM,SAAAT,GACLU,QAAQC,IAAIX,GACZC,EAASD,GACTG,EAAUV,QAET,CAACE,EAASK,IAGb,qCACCE,IAAWT,GAAkB,cAAC,IAAD,IAC7BS,IAAWT,GAAmB,cAAC,UAAD,IAC9BS,IAAWT,GAEZ,oBAAImB,UAAWC,IAAEL,KAAjB,SAAwBV,EAAOgB,KAAI,SAAAC,GAAK,OACtC,qBAAIH,UAAWC,IAAEE,MAAjB,UAEE,qBACEC,IACED,EAAME,aAAN,UACKC,KADL,OACoBH,EAAME,cACxBE,IAEFC,IAAKL,EAAMM,cACXT,UAAWC,IAAES,QAEjB,oBAAIV,UAAWC,IAAEU,KAAjB,SAAwBR,EAAMM,gBAC9B,sBAAMT,UAAWC,IAAEW,UAAnB,SAA+BT,EAAMS,cAXlCT,EAAMU,c,mBC1CfC,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,KAAO,mBAAmB,UAAY","file":"static/js/7.d904b299.chunk.js","sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport s from '../Cast/Cast.module.css'\r\nimport moviesApi from '../../services/movie-api';\r\nimport NotFoundView from '../NotFound/NotFound';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport NoImgFound from '../../img/notFoundImg.png';\r\nimport baseImageURL from '../../services/BaseImgURL';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\nexport default function Cast() {\r\n  const { movieId } = useParams()\r\n  const [ actors, setActors ] = useState(null)\r\n  const [ error, setError ] = useState(null)\r\n  const [ status, setStatus ] = useState(Status.IDLE)\r\n\r\n\r\nuseEffect(() => {\r\n  moviesApi.FetchCastInfo(movieId)\r\n  .then(cast => {\r\n     setActors(cast)\r\n     setStatus(Status.RESOLVED)\r\n  })\r\n  .catch(error => {\r\n    console.log(error)\r\n    setError(error)\r\n    setStatus(Status.REJECTED)\r\n  })\r\n  }, [movieId, error])\r\n\r\nreturn (\r\n  <>\r\n  {status === Status.PENDING && <Loader/>}\r\n  {status === Status.REJECTED && <NotFoundView/>}\r\n  {status === Status.RESOLVED && (\r\n  \r\n  <ul className={s.cast}>{actors.map(actor => (\r\n    <li className={s.actor}\r\n    key={actor.id}>\r\n      <img \r\n        src={\r\n          actor.profile_path\r\n          ? `${baseImageURL}${actor.profile_path}`\r\n          : NoImgFound\r\n          } \r\n          alt={actor.original_name}\r\n          className={s.photo} \r\n          />\r\n      <h4 className={s.name}>{actor.original_name}</h4>\r\n      <span className={s.character}>{actor.character}</span>\r\n    </li>\r\n    ))}\r\n  </ul>\r\n )}\r\n</>\r\n)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cast\":\"Cast_cast__17iWc\",\"actor\":\"Cast_actor__3zdci\",\"photo\":\"Cast_photo__3aTh6\",\"name\":\"Cast_name__1cCzE\",\"character\":\"Cast_character__M4WiC\"};"],"sourceRoot":""}