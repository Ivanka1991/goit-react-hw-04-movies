{"version":3,"sources":["views/Reviews/Reviews.module.css","views/Reviews/Reviews.jsx"],"names":["module","exports","Status","Reviews","movieId","useParams","useState","reviews","setReviews","status","setStatus","error","setError","useEffect","moviesApi","FetchMovieReviews","then","results","lenght","Error","catch","className","s","map","review","reviewsItem","title","author","reviewsContent","content","id","message"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,6BAA6B,MAAQ,yB,0ICI/DC,EACE,OADFA,EAGM,WAHNA,EAIM,WAGG,SAASC,IACtB,IAAQC,EAAYC,cAAZD,QACR,EAAgCE,mBAAS,MAAzC,mBAAQC,EAAR,KAAiBC,EAAjB,KACA,EAA4BF,mBAASJ,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAkBF,OAhBEC,qBAAW,WACPC,IACCC,kBAAkBX,GAClBY,MAAK,SAAAC,GACJ,GAAuB,IAAnBA,EAAQC,OACV,MAAM,IAAIC,MAAM,kCAElBX,EAAWS,GACXP,EAAUR,MAEXkB,OAAM,SAAAT,GACLC,EAASD,GACTD,EAAUR,QAEZ,CAACE,IAGL,qCACGK,IAAWP,GACX,oBAAImB,UAAWC,IAAEf,QAAjB,SACGA,EAAQgB,KAAI,SAAAC,GAAM,OACjB,qBAAIH,UAAWC,IAAEG,YAAjB,UAEE,oBAAIJ,UAAWC,IAAEI,MAAjB,SAAyBF,EAAOG,SAChC,sBAAMN,UAAWC,IAAEM,eAAnB,SAAoCJ,EAAOK,YAFvCL,EAAOM,SAOjBrB,IAAWP,GAAmB,4BAAIS,EAAMoB","file":"static/js/9.04439b31.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviewsItem\":\"Reviews_reviewsItem__3rf5Z\",\"title\":\"Reviews_title__3ySei\"};","import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport moviesApi from '../../services/movie-api';\r\nimport s from '../Reviews/Reviews.module.css';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n}\r\n\r\nexport default function Reviews() {\r\n  const { movieId } = useParams()\r\n  const [ reviews, setReviews ] = useState(null)\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect (() => {\r\n      moviesApi\r\n      .FetchMovieReviews(movieId)\r\n      .then(results => {\r\n        if (results.lenght === 0) {\r\n          throw new Error('Ops.. we dont have reviews yet')\r\n        }\r\n        setReviews(results)\r\n        setStatus(Status.RESOLVED)\r\n      })\r\n      .catch(error => {\r\n        setError(error)\r\n        setStatus(Status.REJECTED)\r\n      })\r\n    },[movieId])\r\n\r\nreturn (\r\n  <>\r\n    {status === Status.RESOLVED && (\r\n     <ul className={s.reviews}>\r\n       {reviews.map(review => (\r\n         <li className={s.reviewsItem}\r\n          key={review.id}>\r\n           <h2 className={s.title}>{review.author}</h2>\r\n           <span className={s.reviewsContent}>{review.content}</span>\r\n         </li>\r\n       ))}\r\n     </ul>\r\n  )}\r\n    {status === Status.REJECTED && <p>{error.message}</p>}\r\n  \r\n  </>\r\n)\r\n}"],"sourceRoot":""}